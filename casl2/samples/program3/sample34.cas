SAMPLE34 	START
	LAD 	GR0, 	0
	CALL 	L0001
	CALL 	FLUSH
	SVC 	0
NUM 	DC 	0
CH 	DC 	0
L0001	DS	0
	LAD 	GR1, L0002
	LD 	GR2, 	GR0
	CALL 	WRITESTR
	CALL 	WRITLINE
	LAD 	GR1, 	NUM
	PUSH 	0, 	GR1
	POP 	GR1
	CALL 	READINT
	CALL 	READLINE
	LAD 	GR1, 	CH
	PUSH 	0, 	GR1
	POP 	GR1
	CALL 	READCHAR
	CALL 	READLINE
	CALL 	WRITLINE
L0003	DS	0
	LD 	GR1, 	NUM
	PUSH 	0, 	GR1
	LAD 	GR1, 	0
	PUSH 	0, 	GR1
	POP 	GR2
	POP 	GR1
	CPA 	GR1, 	GR2
	JPL 	L0005
	LD 	GR1, 	GR0
	PUSH 	0, 	GR1
	JUMP 	L0006
L0005	DS	0
	LAD 	GR1, 	1
	PUSH 	0, 	GR1
L0006	DS	0
	POP 	GR1
	CPA 	GR1, 	GR0
	JZE 	L0004
	LD 	GR1, 	CH
	PUSH 	0, 	GR1
	POP 	GR1
	LAD 	GR2, 	0
	CALL 	WRITCHAR
	LAD 	GR1, 	NUM
	PUSH 	0, 	GR1
	LD 	GR1, 	NUM
	PUSH 	0, 	GR1
	LAD 	GR1, 	1
	PUSH 	0, 	GR1
	POP 	GR2
	POP 	GR1
	SUBA 	GR1, 	GR2
	JOV 	EOVF
	PUSH 	0, 	GR1
	POP 	GR2
	POP 	GR1
	ST 	GR2, 	0, 	GR1
	JUMP 	L0003
L0004	DS	0
	CALL 	WRITLINE
	LAD 	GR1, L0007
	LD 	GR2, 	GR0
	CALL 	WRITESTR
	CALL 	WRITLINE
	LAD 	GR1, 	NUM
	PUSH 	0, 	GR1
	POP 	GR1
	CALL 	READINT
	LAD 	GR1, 	CH
	PUSH 	0, 	GR1
	POP 	GR1
	CALL 	READCHAR
	CALL 	WRITLINE
L0008	DS	0
	LD 	GR1, 	NUM
	PUSH 	0, 	GR1
	LAD 	GR1, 	0
	PUSH 	0, 	GR1
	POP 	GR2
	POP 	GR1
	CPA 	GR1, 	GR2
	JPL 	L0010
	LD 	GR1, 	GR0
	PUSH 	0, 	GR1
	JUMP 	L0011
L0010	DS	0
	LAD 	GR1, 	1
	PUSH 	0, 	GR1
L0011	DS	0
	POP 	GR1
	CPA 	GR1, 	GR0
	JZE 	L0009
	LD 	GR1, 	CH
	PUSH 	0, 	GR1
	POP 	GR1
	LAD 	GR2, 	0
	CALL 	WRITCHAR
	LAD 	GR1, 	NUM
	PUSH 	0, 	GR1
	LD 	GR1, 	NUM
	PUSH 	0, 	GR1
	LAD 	GR1, 	1
	PUSH 	0, 	GR1
	POP 	GR2
	POP 	GR1
	SUBA 	GR1, 	GR2
	JOV 	EOVF
	PUSH 	0, 	GR1
	POP 	GR2
	POP 	GR1
	ST 	GR2, 	0, 	GR1
	JUMP 	L0008
L0009	DS	0
	CALL 	WRITLINE
	RET
L0007 	DC 	'input the number of data and data character (read)'
L0002 	DC 	'input the number of data and data character (readln)'
;-- Library --
EOVF	DS	0
  CALL  WRITLINE
  LAD  GR1, EOVF1
  LD  GR2, GR0
  CALL  WRITESTR
  CALL  WRITLINE
  SVC  1  ;  overflow error stop
EOVF1    DC  '***** Run-Time Error : Overflow *****'
E0DIV	DS	0
  JNZ  EOVF
  CALL  WRITLINE
  LAD  GR1, E0DIV1
  LD  GR2, GR0
  CALL  WRITESTR
  CALL  WRITLINE
  SVC  2  ;  0-divide error stop
E0DIV1    DC  '***** Run-Time Error : Zero-Divide *****'
EROV	DS	0
  CALL  WRITLINE
  LAD  GR1, EROV1
  LD  GR2, GR0
  CALL  WRITESTR
  CALL  WRITLINE
  SVC  3  ;  range-over error stop
EROV1    DC  '***** Run-Time Error : Range-Over in Array Index *****'
WRITCHAR	DS	0
; GR1の値（文字）をGR2のけた数で出力する．
; GR2が0なら必要最小限の桁数で出力する
  RPUSH
  LD  GR6, SPACE
  LD  GR7, OBUFSIZE
WC1	DS	0
  SUBA  GR2, ONE  ; while(--c > 0) {
  JZE  WC2
  JMI  WC2
  ST  GR6, OBUF,GR7  ;  *p++ = ' ';
  CALL  BOVFCHCE
  JUMP  WC1  ; }
WC2	DS	0
  ST  GR1, OBUF,GR7  ; *p++ = GR1;
  CALL  BOVFCHCE
  ST  GR7, OBUFSIZE
  RPOP
  RET
WRITESTR	DS	0
; GR1が指す文字列をGR2のけた数で出力する．
; GR2が0なら必要最小限の桁数で出力する
  RPUSH
  LD  GR6, GR1  ; p = GR1;
WS1	DS	0
  LD  GR4, 0,GR6  ; while(*p != '\0') {
  JZE  WS2
  ADDA  GR6, ONE  ;  p++;
  SUBA  GR2, ONE  ;  c--;
  JUMP  WS1  ; }
WS2	DS	0
  LD  GR7, OBUFSIZE  ; q = OBUFSIZE;
  LD  GR5, SPACE
WS3	DS	0
  SUBA  GR2, ONE  ; while(--c >= 0) {
  JMI  WS4
  ST  GR5, OBUF,GR7  ;  *q++ = ' ';
  CALL  BOVFCHCE
  JUMP  WS3  ; }
WS4	DS	0
  LD  GR4, 0,GR1  ; while(*GR1 != '\0') {
  JZE  WS5
  ST  GR4, OBUF,GR7  ;  *q++ = *GR1++;
  ADDA  GR1, ONE
  CALL  BOVFCHCE
  JUMP  WS4  ; }
WS5	DS	0
  ST  GR7, OBUFSIZE  ; OBUFSIZE = q;
  RPOP
  RET
BOVFCHCE	DS	0
    ADDA  GR7, ONE
    CPA   GR7, BOVFLEVE
    JMI  BOVF1
    CALL  WRITLINE
    LD GR7, OBUFSIZE
BOVF1	DS	0
    RET
BOVFLEVE  DC 256
WRITEINT	DS	0
; GR1の値（整数）をGR2のけた数で出力する．
; GR2が0なら必要最小限の桁数で出力する
  RPUSH
  LD  GR7, GR0  ; flag = 0;
  CPA  GR1, GR0  ; if(GR1>=0) goto WI1;
  JPL  WI1
  JZE  WI1
  LD  GR4, GR0  ; GR1= - GR1;
  SUBA  GR4, GR1
  CPA  GR4, GR1
  JZE  WI6
  LD  GR1, GR4
  LD  GR7, ONE  ; flag = 1;
WI1	DS	0
  LD  GR6, SIX  ; p = INTBUF+6;
  ST  GR0, INTBUF,GR6  ; *p = '\0';
  SUBA  GR6, ONE  ; p--;
  CPA  GR1, GR0  ; if(GR1 == 0)
  JNZ  WI2
  LD  GR4, ZERO  ;  *p = '0';
  ST  GR4, INTBUF,GR6
  JUMP  WI5  ; }
WI2	DS	0      ; else {
  CPA  GR1, GR0  ;  while(GR1 != 0) {
  JZE  WI3
  LD  GR5, GR1  ;   GR5 = GR1 - (GR1 / 10) * 10;
  DIVA  GR1, TEN  ;   GR1 /= 10;
  LD  GR4, GR1
  MULA  GR4, TEN
  SUBA  GR5, GR4
  ADDA  GR5, ZERO  ;   GR5 += '0';
  ST  GR5, INTBUF,GR6  ;   *p = GR5;
  SUBA  GR6, ONE  ;   p--;
  JUMP  WI2  ;  }
WI3	DS	0
  CPA  GR7, GR0  ;  if(flag != 0) {
  JZE  WI4
  LD  GR4, MINUS  ;   *p = '-';
  ST  GR4, INTBUF,GR6
  JUMP  WI5  ;  }
WI4	DS	0
  ADDA  GR6, ONE  ;  else p++;
    ; }
WI5	DS	0
  LAD  GR1, INTBUF,GR6  ; GR1 = p;
  CALL  WRITESTR  ; WRITESTR();
  RPOP
  RET
WI6	DS	0
  LAD  GR1, MMINT
  CALL  WRITESTR  ; WRITESTR();
  RPOP
  RET
MMINT    DC  '-32768'
WRITBOOL	DS	0
; GR1の値（真理値）が0なら'FALSE'を
; 0以外なら'TRUE'をGR2のけた数で出力する．
; GR2が0なら必要最小限の桁数で出力する
  RPUSH
  CPA  GR1, GR0  ; if(GR1 != 0)
  JZE  WB1
  LAD  GR1, WBTRUE  ;  GR1 = " TRUE ";
  JUMP  WB2
WB1	DS	0      ; else
  LAD  GR1, WBFALSE  ;  GR1 = " FALSE ";
WB2	DS	0
  CALL  WRITESTR  ; WRITESTR();
  RPOP
  RET
WBTRUE    DC  'TRUE'
WBFALSE    DC  'FALSE'
WRITLINE	DS	0
; 改行を出力する
  RPUSH
  LD  GR7, OBUFSIZE
  LD  GR6, NEWLINE
  ST  GR6, OBUF,GR7
  ADDA  GR7, ONE
  ST  GR7, OBUFSIZE
  OUT  OBUF, OBUFSIZE
  ST  GR0, OBUFSIZE
  RPOP
  RET
FLUSH	DS	0
  RPUSH
  LD GR7, OBUFSIZE
  JZE FL1
  CALL WRITLINE
FL1	DS	0
  RPOP
  RET
READCHAR	DS	0
; GR1が指す番地に文字一つを読み込む
  RPUSH
  LD  GR5, RPBBUF  ; if(RPBBUF != '\0') {
  JZE  RC0
  ST  GR5, 0,GR1  ;  *GR1 = RPBBUF;
  ST  GR0, RPBBUF  ;  RPBBUF = '\0'
  JUMP  RC3  ;  return; }
RC0	DS	0
  LD  GR7, INP  ; inp = INP;
  LD  GR6, IBUFSIZE  ; if(IBUFSIZE == 0) {
  JNZ  RC1
  IN  IBUF, IBUFSIZE  ;  IN();
  LD  GR7, GR0  ;  inp = 0;
    ; }
RC1	DS	0
  CPA  GR7, IBUFSIZE  ; if(inp == IBUFSIZE) {
  JNZ  RC2
  LD  GR5, NEWLINE  ;  *GR1 = '\n';
  ST  GR5, 0,GR1
  ST  GR0, IBUFSIZE  ;  IBUFSIZE = INP = 0;
  ST  GR0, INP
  JUMP  RC3  ; }
RC2	DS	0      ; else {
  LD  GR5, IBUF,GR7  ;  *GR1 = *inp++;
  ADDA  GR7, ONE
  ST  GR5, 0,GR1
  ST  GR7, INP  ;  INP = inp;
RC3	DS	0      ; }
  RPOP
  RET
READINT	DS	0
;GR1が指す番地に整数値一つを読み込む
  RPUSH
RI1	DS	0      ; do {
  CALL  READCHAR  ;  ch = READCHAR();
  LD  GR7, 0,GR1
  CPA  GR7, SPACE  ; } while(ch == ' ' || ch == '\t' || ch == '\n');
  JZE  RI1
  CPA  GR7, TAB
  JZE  RI1
  CPA  GR7, NEWLINE
  JZE  RI1
  LD  GR5, ONE  ; flag = 1
  CPA  GR7, MINUS  ; if(ch == '-') {
  JNZ  RI4
  LD  GR5, GR0  ;  flag = 0;
  CALL  READCHAR  ;  ch = READCHAR();
  LD  GR7, 0,GR1
RI4	DS	0      ; }
  LD  GR6, GR0  ; v = 0;
RI2	DS	0
  CPA  GR7, ZERO  ; while('0' <= ch && ch <= '9') {
  JMI  RI3
  CPA  GR7, NINE
  JPL  RI3
  MULA  GR6, TEN  ;  v = v*10+ch-'0';
  ADDA  GR6, GR7
  SUBA  GR6, ZERO
  CALL  READCHAR  ;  ch = READSCHAR();
  LD  GR7, 0,GR1
  JUMP  RI2  ; }
RI3	DS	0
  ST  GR7, RPBBUF  ; ReadPushBack();
  ST  GR6, 0,GR1  ; *GR1 = v;
  CPA  GR5, GR0  ; if(flag == 0) {
  JNZ  RI5
  SUBA  GR5, GR6  ;  *GR1 = -v;
  ST  GR5, 0,GR1
RI5	DS	0      ; }
  RPOP
  RET
READLINE	DS	0
; 入力を改行コードまで（改行コードも含む）読み飛ばす
  ST  GR0, IBUFSIZE
  ST  GR0, INP
  ST  GR0, RPBBUF
  RET
ONE    DC  1
SIX    DC  6
TEN    DC  10
SPACE    DC  #0020  ; ' '
MINUS    DC  #002D  ; '-'
TAB    DC  #0009  ; '\t'
ZERO    DC  #0030  ; '0'
NINE    DC  #0039  ; '9'
NEWLINE    DC  #000A  ; '\n'
INTBUF    DS  8
OBUFSIZE  DC  0
IBUFSIZE  DC  0
INP    DC  0
OBUF    DS  257
IBUF    DS  257
RPBBUF    DC  0
	END
